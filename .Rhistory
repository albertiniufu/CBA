library(cba)
dataset=data("iris")
dataset
dataset=as.matrix(iris[,1:4])
modelo = c(rep(1,50),rep(2,50), rep(3,50))
for (i in 1:N) {
norma = sqrt(sum(dataset[i,]**2))
dataset[i,] = dataset[i,]/norma
}
N=nrow(dataset)
for (i in 1:N) {
norma = sqrt(sum(dataset[i,]**2))
dataset[i,] = dataset[i,]/norma
}
dataset
modelo
p1=kmeans(dataset,k=3)
p1=kmeans(dataset,centers = 3)
p1
p1=p1$cluster
p1
library(e1071)
p2=bclust(dataset,centers = 3)
p2
p2$cluster
p2=p2$cluster
p1
p2
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,3)
p2=bclust(dataset,centers = 3)$cluster
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,3)
modelo
p1
p2
p2=bclust(dataset,centers = 4)$cluster
p2
cba(dataset,p1,p2,3)
cba(dataset,p1,p2,2)
cba(dataset,p1,p2,4)
cba(dataset,p1,p2,5)
cba(dataset,p1,p2,6)
cba(dataset,p1,p2,100)
library(cba)
library(cba)
library(cba)
cba(dataset=iris[,1:4],kmeans(iris[,1:4],centers=3)$cluster,cutree(hclust(dist(iris[,1:4])),k=3),K=3)
cba(dataset=iris[,1:4],kmeans(iris[,1:4],centers=3)$cluster,cutree(hclust(dist(iris[,1:4])),k=3),K=3)
i
grupos
grupos[2]
centroids
dim(centroids)
length(centroids)
ls()
cba(dataset=iris[,1:4],kmeans(iris[,1:4],centers=3)$cluster,cutree(hclust(dist(iris[,1:4])),k=3),K=3)
cba(dataset=iris[,1:4],kmeans(iris[,1:4],centers=3)$cluster,cutree(hclust(dist(iris[,1:4])),k=3),K=3)
m = length(grupos)
d = ncol(data)
cont = rep(0,m)
centroids = matrix(0, nrow=K, ncol=d)
centroids
m
i
i=1
grupos[i]!=0
centroids[grupos[i],]=centroids[grupos[i],]+data[i,]
grupos[i]
grupos
grupos2=organizavetor(grupos)
grupos2
grupos3=grupos
grupos=grupos2
m = length(grupos)
d = ncol(data)
cont = rep(0,m)
centroids = matrix(0, nrow=K, ncol=d)
#soma e contagem de cada coluna referente a um documento e seu grupo, e a contagem de quandos doc pertencem a cada grupo
for(i in 1:m){
if(grupos[i]!=0){
centroids[grupos[i],]=centroids[grupos[i],]+data[i,]
cont[grupos[i]]=cont[grupos[i]]+1
}
}
#divisao dos somatorios com a contagem de docs para cada grupo
n = nrow(centroids)
for(i in 1:n)
if(cont[i]!=0)
centroids[i,]=centroids[i,]/cont[i]
m = length(grupos)
d = ncol(data)
cont = rep(0,m)
centroids = matrix(0, nrow=K, ncol=d)
library(cba)
cba(dataset=iris[,1:4],kmeans(iris[,1:4],centers=3)$cluster,cutree(hclust(dist(iris[,1:4])),k=3),K=3)
cba(dataset=iris[,1:4],kmeans(iris[,1:4],centers=3)$cluster,cutree(hclust(dist(iris[,1:4])),k=3),K=3)
centroids
K
length(centroids)
dim(centroids)
nrow(centroids)
data[i,]
centroids[grupos[i],]
grupos
centroids = matrix(0, nrow=K, ncol=d)
i=1
centroids[grupos[i],]=centroids[grupos[i],]+data[i,]
cont[grupos[i]]=cont[grupos[i]]+1
centroids
dim(centroids)
centroids = matrix(0, nrow=K, ncol=d)
centroids
centroids[grupos[i],]+data[i,]
c(centroids[grupos[i],]+data[i,])
centroids[grupos[i],]+data[i,]
f=centroids[grupos[i],]+data[i,]
cba(dataset=iris[,1:4],kmeans(iris[,1:4],centers=3)$cluster,cutree(hclust(dist(iris[,1:4])),k=3),K=3)
cba(dataset=iris[,1:4],kmeans(iris[,1:4],centers=3)$cluster,cutree(hclust(dist(iris[,1:4])),k=3),K=3)
ls()
i=1
centroids = matrix(0, nrow=K, ncol=d)
centroids[grupos[i],]+data[i,]
as.numeric(centroids[grupos[i],]+data[i,])
centroids[grupos[i],]=as.numeric(centroids[grupos[i],]+data[i,])
centroids
cont[grupos[i]]=cont[grupos[i]]+1
i=2
centroids[grupos[i],]=as.numeric(centroids[grupos[i],]+data[i,])
cont[grupos[i]]=cont[grupos[i]]+1
centroids
library(cba)
cba(dataset=iris[,1:4],kmeans(iris[,1:4],centers=3)$cluster,cutree(hclust(dist(iris[,1:4])),k=3),K=3)
